#include <iostream>

using namespace std;

/*
 * 1 자리: 1               2               3               4               5               6               7               8                 9                                9자리
 * 2 자리: 10      12      21      23      32      34      43      45      54      56      65      67      76      78      87      89        98      X                        17자리  1 
 * 3 자리: 101 X   121 123 210 212 232 234 321 323 343 345 432 434 454 456 543 545 565 567 654 656 676 678 765 767 787 789 876 878 898 X     987 989 X    X                   32자리  4   3
 * 4 자리: 0 2 X X 0 2 1 3 1 X 1 3 1 3 3 5 0 2 2 4 2 4 4 6 1 3 3 5 3 5 5 7 2 4 4 6 4 6 6 8 3 5 5 7 5 7 7 9 4 6 6 8 6 8 8 X 5 7 7 9 7 9 X X   6 8 8 X X X  X X                 61자리  11  7
 * 5 자리: 1 2 0 0 1 2 2 2 2 0 2 2 2 2 2 2 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 1 2 2 2 2 2 2 2 0 2 2 2 1 2 1 0 0   2 2 2 0 0 0  0 0                 116자리 28  17
 *                                                                                                                                                                            222자리 66  38 
 * 끝이 0이거나 9면 하나밖에 생성 못함
 * 
 * 1이나 8은 0이나 9를 만듦
 * 결국 다음 상태에 사라지는 수: 이전 상태의 0이나 9 개수
 *
 * dp[i] = 2*dp[i-1] - (i-1)
 * */

/*
int dp[101] = {0};
int main() {
    int n;
    cin >> n;
    dp[1] = 9;
    dp[2] = 17;
    dp[3] = 32;

    for (int i = 4; i <= 100; i++) {
        dp[i] = (2 * dp[i-1] - (i-1)) % 1000000000;
    }

    cout << dp[n] << endl;

    return 0;
}
*/

int dp[101][10];

int main() {
    int n; cin >> n; dp[1][0] = 0;
    for (int i = 1; i <= 9; i++) {
        dp[1][i] = 1;
    }
    for (int i = 2; i <= n; i++) {
        for (int j = 0; j <= 9; j++) {
            if (j == 0) dp[i][j] = dp[i-1][j+1] % 1000000000;
            else if (j == 9) dp[i][j] = dp[i-1][j-1] % 1000000000;
            else dp[i][j] = (dp[i-1][j+1] + dp[i-1][j-1]) % 1000000000;
        }
    }

    int res = 0;
    for (int i = 0; i <= 9; i++) res = (res + dp[n][i]) % 1000000000;

    cout << res << endl;


    return 0;
}
